<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Window Style -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="#F3F4F6"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Button Style with Triggers -->
    <Style TargetType="Button">
        <!-- Các thuộc tính cơ bản -->
        <Setter Property="Background" Value="#0078D7"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" Opacity="0.2"/>
            </Setter.Value>
        </Setter>

        <!-- ControlTemplate cho Button -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Border chứa nội dung Button -->
                        <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>

                    <!-- Triggers cho hiệu ứng -->
                    <ControlTemplate.Triggers>
                        <!-- Hover (Di chuột) -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#005A9E"/>
                            <Setter TargetName="ButtonBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black" BlurRadius="10" Opacity="0.4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Pressed (Nhấn) -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#003C6B"/>
                            <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Disabled (Khi Button bị tắt) -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#CCCCCC"/>
                            <Setter Property="Foreground" Value="#666666"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- GroupBox Style -->
    <Style TargetType="GroupBox">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Foreground="#0078D7" FontSize="16"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock Style with Animation -->
    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#4A4A4A"/>
        <Style.Triggers>
            <!-- Opacity Animation when TextBlock is visible -->
            <EventTrigger RoutedEvent="TextBlock.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="0" To="1" Duration="0:0:1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
